name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure Minikube and Docker
      shell: powershell
      run: |
        # Run as administrator (requires runner to have admin privileges)
        if (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
          Write-Host "ERROR: This script must be run as Administrator!"
          exit 1
        }

        # Start Docker service if not running
        Start-Service docker

        # Configure Minikube with explicit driver
        minikube config set driver docker

        # Start Minikube with admin privileges
        $minikubeStatus = minikube status --output=json | ConvertFrom-Json
        if (-not ($minikubeStatus.Host -eq "Running")) {
          Write-Host "Starting Minikube..."
          minikube start --driver=docker --force
        }

        # Configure Docker environment
        $envOutput = minikube -p minikube docker-env --shell powershell | Where-Object { $_ -notmatch "false" }
        if ($envOutput) {
          Invoke-Expression $envOutput
        } else {
          Write-Host "WARNING: Could not configure Docker environment"
          exit 1
        }

        # Verify Docker connection
        docker version
        Write-Host "Docker configured successfully"

    - name: Build Docker image
      shell: powershell
      run: |
        docker build -t mahnoorhafeez/project-mern:latest .
        Write-Host "Image built successfully"

    - name: Push to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      shell: powershell
      run: |
        $securePassword = ConvertTo-SecureString $env:DOCKER_PASSWORD -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ($env:DOCKER_USERNAME, $securePassword)
        docker login -u $env:DOCKER_USERNAME --password-stdin $env:DOCKER_PASSWORD
        docker push mahnoorhafeez/project-mern:latest
        Write-Host "Image pushed successfully"

    - name: Deploy to Minikube
      shell: powershell
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        
        # Verify deployment
        kubectl get pods -o wide
        kubectl get services
        Write-Host "Deployment completed successfully"